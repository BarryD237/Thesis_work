===========================================
Python script to parse antismash .gbk file 
Counting Biosynthetic Gene Clusters
Displaying as bar chart .pdf 
===========================================

# move genbank file to Jupyter notebook working dir 

# get into 'base' venv . (not tested without)

from Bio import SeqIO # Parse Genbank file
import pandas as pd # Load in cluster type data
import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt


#import os
#os.chdir('/Users/barrydigby/GOODONE/all_parameters/')


# Set input file, output file to write to
gbk_file = "contig_1.final.gbk"
tsv_file = "test_output.tsv"
cluster_out = open(tsv_file, "w")


# Extract Cluster info, write to file
for seq_record in SeqIO.parse(gbk_file, "genbank"):
        for seq_feat in seq_record.features:
                if seq_feat.type == "cluster":
                        cluster_number=seq_feat.qualifiers["note"][0].replace(" ","_").replace(":","")
                        cluster_type=seq_feat.qualifiers["product"][0]

                        cluster_out.write("#"+cluster_number+"\tCluster Type:""\t"+cluster_type+"\n")


# Read in output file containing Cluster #'s and corresponding BGC class

# had to add in header for 3rd column to avoid 'empty dataframe' error w/ pandas.  

df = pd.read_csv('test_output.tsv', sep='\t', names=['Cluster Number', '#', 'Cluster_Type'])

x = df.Cluster_Type.value_counts()

# Write counts of each BGC detected to 
x.to_csv('/Users/barrydigby/GOODONE/all_parameters/cluster_counts.csv')

#%load_ext rpy2.ipython

df2 = pd.read_csv('cluster_counts.csv', sep=',', names=['Cluster Type', 'Count'])


df2.plot.bar(x='Cluster Type', rot='0')

plt.savefig('cluster_counts.pdf')
